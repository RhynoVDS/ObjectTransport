<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard1.6;netcoreapp1.1;net46</TargetFrameworks>
    <AssemblyName>ObjectTransport.TCP</AssemblyName>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <RootNamespace>OTransport.NetworkChannel.TCP</RootNamespace>
    <PackageId>ObjectTransport.TCP</PackageId>
    <PackageVersion>0.2.0</PackageVersion>
    <Authors>Rhyno van der Sluijs</Authors>
    <Description>This package contains the TCP network channel implementation for the ObjectTransport framework. This package allows you to send and receive objects over TCP.</Description>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageReleaseNotes>
    In this release we have made a big change. All components of ObjectTransport are now seperated into different packages. 
    This package is the TCP implmentation of the network channel interface for ObjectTransport.
    
    The TCP and UDP implementations have been seperated in their own packages. 
    -TCP (Nuget Package: ObjectTransport.TCP)
    -UDP (Nuget Package: ObjectTransport.UDP)
    
    Serilization is now wrapped around an interface and is also in a seperate package.    
    We have implemented the following serilization:
    -Json (Nuget Package: ObjectTransport.JSON)
    -Protobuf (Nuget Package: ObjectTransport.Protobuf)

    </PackageReleaseNotes>
    <Copyright></Copyright>
    <PackageTags>TCP Server Object networking UDP</PackageTags>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.Threading" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\ObjectTransport\ObjectTransport.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net46'">
    <PackageReference Include="System.IO">
      <Version>4.0.0</Version>
    </PackageReference>
  </ItemGroup>

</Project>
